{"ast":null,"code":"var _jsxFileName = \"/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/pages/main/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reminders: [],\n      reminderInfo: {},\n      page: 1,\n      id: \"\"\n    };\n\n    this.loadReminders = async (page = 1) => {\n      const response = await api.get(`/reminders?page=${page}`);\n      const {\n        docs,\n        ...reminderInfo\n      } = response.data;\n      this.setState({\n        reminders: docs,\n        reminderInfo,\n        page\n      });\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state;\n      if (page === 1) return;\n      const pageNumber = page - 1;\n      this.loadReminders(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page,\n        reminderInfo\n      } = this.state;\n      if (page === reminderInfo.pages) return;\n      const pageNumber = page + 1;\n      this.loadReminders(pageNumber);\n    };\n\n    this.deleteReminder = async id => {\n      const {\n        title,\n        description,\n        period,\n        hour\n      } = this.state;\n\n      if (!title || !description || !period || !hour) {\n        this.setState({\n          error: \"Fill all inputs to create a new reminder\"\n        });\n      } else {\n        try {\n          await api.post(\"/reminders\", {\n            title,\n            description,\n            period,\n            hour\n          });\n          this.props.history.push(\"/main\");\n          window.location.reload(false);\n        } catch (err) {\n          this.setState({\n            error: err\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadReminders();\n  }\n\n  render() {\n    const {\n      reminders,\n      page,\n      reminderInfo\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminder-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-insert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/reminders/new-reminder',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Insert New Reminder\")), reminders.map(reminder => /*#__PURE__*/React.createElement(\"article\", {\n      key: reminder._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, reminder.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, reminder.description), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"actions-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/reminders/${reminder._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Access\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"delete-button\",\n      onClick: this.deleteReminder(reminder._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Delete\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: page === 1,\n      onClick: this.prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: page === reminderInfo.pages,\n      onClick: this.nextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Next\")));\n  }\n\n}","map":{"version":3,"sources":["/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/pages/main/index.js"],"names":["React","Component","api","Link","Main","state","reminders","reminderInfo","page","id","loadReminders","response","get","docs","data","setState","prevPage","pageNumber","nextPage","pages","deleteReminder","title","description","period","hour","error","post","props","history","push","window","location","reload","err","componentDidMount","render","map","reminder","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAO,cAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACJC,MAAAA,SAAS,EAAG,EADR;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,IAAI,EAAE,CAHF;AAIJC,MAAAA,EAAE,EAAE;AAJA,KAF+B;;AAAA,SAavCC,aAbuC,GAavB,OAAOF,IAAI,GAAG,CAAd,KAAmB;AAC/B,YAAMG,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAS,mBAAkBJ,IAAK,EAAhC,CAAvB;AAEA,YAAM;AAACK,QAAAA,IAAD;AAAO,WAAGN;AAAV,UAA0BI,QAAQ,CAACG,IAAzC;AAEA,WAAKC,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAEO,IAAZ;AAAkBN,QAAAA,YAAlB;AAAgCC,QAAAA;AAAhC,OAAd;AACH,KAnBsC;;AAAA,SAqBvCQ,QArBuC,GAqB5B,MAAM;AACb,YAAM;AAACR,QAAAA;AAAD,UAAS,KAAKH,KAApB;AAEA,UAAGG,IAAI,KAAI,CAAX,EAAc;AAEd,YAAMS,UAAU,GAAGT,IAAI,GAAG,CAA1B;AAEA,WAAKE,aAAL,CAAmBO,UAAnB;AACH,KA7BsC;;AAAA,SA+BvCC,QA/BuC,GA+B5B,MAAM;AACb,YAAM;AAACV,QAAAA,IAAD;AAAOD,QAAAA;AAAP,UAAuB,KAAKF,KAAlC;AAEA,UAAGG,IAAI,KAAKD,YAAY,CAACY,KAAzB,EAAgC;AAEhC,YAAMF,UAAU,GAAGT,IAAI,GAAG,CAA1B;AAEA,WAAKE,aAAL,CAAmBO,UAAnB;AACH,KAvCsC;;AAAA,SAyCvCG,cAzCuC,GAyCtB,MAAOX,EAAP,IAAc;AAC3B,YAAM;AAAEY,QAAAA,KAAF;AAASC,QAAAA,WAAT;AAAsBC,QAAAA,MAAtB;AAA8BC,QAAAA;AAA9B,UAAuC,KAAKnB,KAAlD;;AACA,UAAI,CAACgB,KAAD,IAAU,CAACC,WAAX,IAA0B,CAACC,MAA3B,IAAqC,CAACC,IAA1C,EAAgD;AAC9C,aAAKT,QAAL,CAAc;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OAFD,MAEO;AACL,YAAI;AACF,gBAAMvB,GAAG,CAACwB,IAAJ,CAAS,YAAT,EAAuB;AAAEL,YAAAA,KAAF;AAASC,YAAAA,WAAT;AAC7BC,YAAAA,MAD6B;AACrBC,YAAAA;AADqB,WAAvB,CAAN;AAEA,eAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACD,SALD,CAKE,OAAOC,GAAP,EAAY;AACZ,eAAKlB,QAAL,CAAc;AACZU,YAAAA,KAAK,EACHQ;AAFU,WAAd;AAID;AACF;AACF,KA1DoC;AAAA;;AASvCC,EAAAA,iBAAiB,GAAE;AACf,SAAKxB,aAAL;AACH;;AAiDDyB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAC7B,MAAAA,SAAD;AAAYE,MAAAA,IAAZ;AAAkBD,MAAAA;AAAlB,QAAkC,KAAKF,KAA7C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,CADJ,EAIKC,SAAS,CAAC8B,GAAV,CAAcC,QAAQ,iBACnB;AAAS,MAAA,GAAG,EAAEA,QAAQ,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASD,QAAQ,CAAChB,KAAlB,CADJ,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIgB,QAAQ,CAACf,WAAb,CAFI,eAIJ;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,cAAae,QAAQ,CAACC,GAAI,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,MAAA,EAAE,EAAC,eAAX;AAA2B,MAAA,OAAO,EAAE,KAAKlB,cAAL,CAAoBiB,QAAQ,CAACC,GAA7B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAJI,CADH,CAJL,eAgBA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,EAAE9B,IAAI,KAAI,CAA1B;AAA6B,MAAA,OAAO,EAAE,KAAKQ,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,MAAA,QAAQ,EAAER,IAAI,KAAKD,YAAY,CAACY,KAAxC;AAA+C,MAAA,OAAO,EAAE,KAAKD,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAhBA,CADJ;AAuBH;;AArFsC","sourcesContent":["import React, {Component} from 'react';\nimport api from '../../services/api';\nimport {Link} from 'react-router-dom';\n\nimport './styles.css';\n\nexport default class Main extends Component{\n\n    state = {\n        reminders : [],\n        reminderInfo: {},\n        page: 1,\n        id: \"\"\n    };\n\n    componentDidMount(){\n        this.loadReminders();\n    };\n\n    loadReminders = async (page = 1) =>{\n        const response = await api.get(`/reminders?page=${page}`);\n\n        const {docs, ...reminderInfo} = response.data;\n\n        this.setState({reminders: docs, reminderInfo, page});\n    };\n\n    prevPage = () => {\n        const {page} = this.state;\n\n        if(page ===1) return;\n\n        const pageNumber = page - 1;\n\n        this.loadReminders(pageNumber);\n    }\n\n    nextPage = () => {\n        const {page, reminderInfo} = this.state;\n\n        if(page === reminderInfo.pages) return;\n\n        const pageNumber = page + 1;\n\n        this.loadReminders(pageNumber);\n    }\n\n    deleteReminder = async (id) => {\n        const { title, description, period, hour } = this.state;\n        if (!title || !description || !period || !hour) {\n          this.setState({ error: \"Fill all inputs to create a new reminder\" });\n        } else {\n          try {\n            await api.post(\"/reminders\", { title, description,\n            period, hour });\n            this.props.history.push(\"/main\");\n            window.location.reload(false);\n          } catch (err) {\n            this.setState({\n              error:\n                err\n            });\n          }\n        }\n      };\n\n    render(){\n        const {reminders, page, reminderInfo} = this.state;\n        return (\n            <div className=\"reminder-list\">\n                <div className=\"button-insert\">\n                <Link to={'/reminders/new-reminder'}>Insert New Reminder</Link>\n                </div>\n                {reminders.map(reminder => (\n                    <article key={reminder._id}>\n                        <strong>{reminder.title}</strong>\n                <p>{reminder.description}</p>\n                \n                <div id=\"actions-button\">\n                    <Link to={`/reminders/${reminder._id}`}>Access</Link>\n                    <button id=\"delete-button\" onClick={this.deleteReminder(reminder._id)}>Delete</button>\n                </div>\n                    </article>\n        ))}\n        \n            <div className=\"actions\">\n                <button disabled={page ===1} onClick={this.prevPage}>Previous</button>\n                <button disabled={page === reminderInfo.pages} onClick={this.nextPage}>Next</button> \n            </div>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}