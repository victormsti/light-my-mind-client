{"ast":null,"code":"var _jsxFileName = \"/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/pages/signup/index.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport Logo from \"../../logo.svg\";\nimport { Form, Container } from \"./styles\";\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.handleSignUp = async e => {\n      e.preventDefault();\n      const {\n        username,\n        email,\n        password\n      } = this.state;\n\n      if (!username || !email || !password) {\n        this.setState({\n          error: \"Fill all inputs to sign up\"\n        });\n      } else {\n        try {\n          await api.post(\"/users\", {\n            username,\n            email,\n            password\n          });\n          const response = await api.post(\"/auth\", {\n            email,\n            password\n          });\n          login(response.data.token);\n          this.props.history.push(\"/main\");\n        } catch (err) {\n          console.log(err);\n          this.setState({\n            error: \"An error ocurred\"\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"Airbnb logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), this.state.error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"E-mail address\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"SignUp for Free\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default withRouter(SignUp);","map":{"version":3,"sources":["/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/pages/signup/index.js"],"names":["React","Component","Link","withRouter","api","Form","Container","SignUp","state","username","email","password","error","handleSignUp","e","preventDefault","setState","post","response","login","data","token","props","history","push","err","console","log","render","Logo","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport api from \"../../services/api\";\n\nimport Logo from \"../../logo.svg\";\n\nimport { Form, Container } from \"./styles\";\n\nclass SignUp extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleSignUp}>\n          <img src={Logo} alt=\"Airbnb logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"E-mail address\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">SignUp for Free</button>\n          <hr />\n          <Link to=\"/\">Login</Link>\n        </Form>\n      </Container>\n    );\n  }\n\n  handleSignUp = async e => {\n    e.preventDefault();\n    const { username, email, password } = this.state;\n    if (!username || !email || !password) {\n      this.setState({ error: \"Fill all inputs to sign up\" });\n    } else {\n      try {\n        await api.post(\"/users\", { username, email, password });\n        const response = await api.post(\"/auth\", { email, password });\n        login(response.data.token);\n        this.props.history.push(\"/main\");\n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"An error ocurred\" });\n      }\n    }\n  };\n}\n\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}