{"ast":null,"code":"import _regeneratorRuntime from\"/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from'axios';import{getToken}from\"./auth\";var api=Axios.create({baseURL:'http://localhost:3000/api'});//const api = Axios.create({baseURL : 'https://light-my-mind-server.herokuapp.com/api'});\napi.interceptors.request.use(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){var token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=getToken();if(token){config.headers.Authorization=\"Bearer \".concat(token);}return _context.abrupt(\"return\",config);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export default api;","map":{"version":3,"sources":["/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/services/api.js"],"names":["Axios","getToken","api","create","baseURL","interceptors","request","use","config","token","headers","Authorization"],"mappings":"6XAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,QAAzB,CAEA,GAAMC,CAAAA,GAAG,CAAGF,KAAK,CAACG,MAAN,CAAa,CAACC,OAAO,CAAG,2BAAX,CAAb,CAAZ,CACA;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,0FAA6B,iBAAMC,MAAN,4HACnBC,KADmB,CACXR,QAAQ,EADG,CAEzB,GAAIQ,KAAJ,CAAW,CACTD,MAAM,CAACE,OAAP,CAAeC,aAAf,kBAAyCF,KAAzC,EACD,CAJwB,gCAKlBD,MALkB,wDAA7B,gEASA,cAAeN,CAAAA,GAAf","sourcesContent":["import Axios from 'axios';\nimport { getToken } from \"./auth\";\n\nconst api = Axios.create({baseURL : 'http://localhost:3000/api'});\n//const api = Axios.create({baseURL : 'https://light-my-mind-server.herokuapp.com/api'});\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n\n  \nexport default api;"]},"metadata":{},"sourceType":"module"}