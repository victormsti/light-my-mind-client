{"ast":null,"code":"var _jsxFileName = \"/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/pages/login/index.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport header from '../../components/Header';\nimport Logo from \"../../logo.svg\";\nimport api from \"../../services/api\";\nimport { login } from \"../../services/auth\";\nimport { Form, Container } from \"./styles\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.handleSignIn = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      if (!email || !password) {\n        this.setState({\n          error: \"Fill all inputs to continue\"\n        });\n      } else {\n        try {\n          const response = await api.post(\"/auth\", {\n            email,\n            password\n          });\n          login(response.data.token);\n          header.setState({\n            loggedIn: true\n          });\n          this.props.history.push(\"/main\");\n        } catch (err) {\n          this.setState({\n            error: err\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), this.state.error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"E-mail address\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"SignUp for Free\")));\n  }\n\n}\n\nexport default withRouter(SignIn);","map":{"version":3,"sources":["/home/victorsilva/Documents/JavaScript/light-my-mind/light-my-mind-client/src/pages/login/index.js"],"names":["React","Component","Link","withRouter","header","api","login","Form","Container","SignIn","state","email","password","error","handleSignIn","e","preventDefault","setState","response","post","data","token","loggedIn","props","history","push","err","render","Logo","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport header from '../../components/Header';\n\nimport Logo from \"../../logo.svg\";\nimport api from \"../../services/api\";\nimport { login } from \"../../services/auth\";\n\nimport { Form, Container } from \"./styles\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleSignIn = async e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if (!email || !password) {\n      this.setState({ error: \"Fill all inputs to continue\" });\n    } else {\n      try {\n        const response = await api.post(\"/auth\", { email, password });\n        login(response.data.token);\n        header.setState({ loggedIn: true });\n        this.props.history.push(\"/main\");\n      } catch (err) {\n        this.setState({\n          error:\n            err\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleSignIn}>\n          <img src={Logo} alt=\"logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"email\"\n            placeholder=\"E-mail address\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">Login</button>\n          <hr />\n          <Link to=\"/signup\">SignUp for Free</Link>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(SignIn);"]},"metadata":{},"sourceType":"module"}